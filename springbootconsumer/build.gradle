plugins {
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id "org.springframework.boot" version "2.2.6.RELEASE"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'application'
}
sourceCompatibility = 1.11
targetCompatibility = 1.11

project.ext {
    springBootVersion = "2.3.0.RELEASE"
    commonsIoVersion = "1.3.2"
    log4jVersion     = "2.13.2"
}
repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()

}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    compile 'com.google.code.gson:gson:2.8.1'
    implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.3.0.RELEASE'

    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars:sockjs-client:1.0.2'
    implementation 'org.webjars:stomp-websocket:2.3.3'
    implementation 'org.webjars:bootstrap:3.3.7'
    implementation 'org.webjars:jquery:3.1.1-1'
    compile 'com.google.code.gson:gson:2.8.1'


    //Logger
    compile("org.apache.logging.log4j:log4j-api:${project.ext.log4jVersion}")
    compile("org.apache.logging.log4j:log4j-core:${project.ext.log4jVersion}")
    //Log4J yaml format
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.7.3'

}

application {
    // Define the main class for the application
    mainClassName = 'consumer.App'
}
